apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: argocd-notifications-cm
  namespace: argocd
data:
  service.webhook.discord: |
    headers:
      - name: Content-Type
        value: application/json
    url: $DISCORD_WEBHOOK_URL
  template.notify-discord: |
    webhook:
      discord:
        method: POST
        body: |
          {
            "content": "{{ .app.metadata.name }}: {{ .app.status.sync.status }}",
            "embeds": [
              {
                "title": "Revision {{ .app.status.sync.revision }}",
                "description": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}",
                "author": {
                  "name": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Author }}"
                },
                "url": "{{ (trimAll ".git" .app.spec.source.repoURL) }}/-/commit/{{ .app.status.sync.revision }}"
              }
            ]
          }
  # these are the same triggers from the catalog, but sending the custom Discord template
  trigger.on-deployed: |
    - description: Application is synced and healthy. Triggered once per commit.
      oncePer: app.status.operationState.syncResult.revision
      send:
      - notify-discord
      when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status
        == 'Healthy'
  trigger.on-health-degraded: |
    - description: Application has degraded
      send:
      - notify-discord
      when: app.status.health.status == 'Degraded'
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      send:
      - notify-discord
      when: app.status.operationState.phase in ['Error', 'Failed']
  trigger.on-sync-running: |
    - description: Application is being synced
      send:
      - notify-discord
      when: app.status.operationState.phase in ['Running']
  trigger.on-sync-status-unknown: |
    - description: Application status is 'Unknown'
      send:
      - notify-discord
      when: app.status.sync.status == 'Unknown'
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      send:
      - notify-discord
      when: app.status.operationState.phase in ['Succeeded']

  subscriptions: |
    - recipients:
      - discord
      triggers:
      - on-deployed
      - on-health-degraded
      - on-sync-failed
      - on-sync-running
      - on-sync-status-unknown
      - on-sync-succeeded